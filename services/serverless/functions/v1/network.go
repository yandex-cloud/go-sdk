// Code generated by sdkgen-v2. DO NOT EDIT.
package functionssdk

import (
	"context"

	functions "github.com/yandex-cloud/go-genproto/yandex/cloud/serverless/functions/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// NetworkClient provides methods for managing Network resources of Yandex.Cloud Functions.
type NetworkClient interface {
	GetUsed(context.Context, *functions.GetUsedNetworkRequest, ...grpc.CallOption) (*functions.UsedNetwork, error)
	ListUsed(context.Context, *functions.ListUsedNetworksRequest, ...grpc.CallOption) (*functions.ListUsedNetworksResponse, error)
	ListConnectedResources(context.Context, *functions.ListConnectedResourcesRequest, ...grpc.CallOption) (*functions.ListConnectedResourcesResponse, error)
	TriggerUsedCleanup(context.Context, *functions.TriggerUsedNetworkCleanupRequest, ...grpc.CallOption) (*functions.TriggerUsedNetworkCleanupResponse, error)
}

var _ NetworkClient = networkClient{}

type networkClient struct {
	connector transport.Connector
}

// NewNetworkClient returns NetworkClient implementation.
func NewNetworkClient(connector transport.Connector) NetworkClient {
	return networkClient{connector}
}

// GetUsed is an operation of Yandex.Cloud Functions Network service.
func (c networkClient) GetUsed(ctx context.Context, in *functions.GetUsedNetworkRequest, opts ...grpc.CallOption) (*functions.UsedNetwork, error) {
	connection, err := c.connector.GetConnection(ctx, NetworkGetUsed, opts...)
	if err != nil {
		return nil, err
	}
	return functions.NewNetworkServiceClient(connection).GetUsed(ctx, in, opts...)
}

// ListUsed is an operation of Yandex.Cloud Functions Network service.
func (c networkClient) ListUsed(ctx context.Context, in *functions.ListUsedNetworksRequest, opts ...grpc.CallOption) (*functions.ListUsedNetworksResponse, error) {
	connection, err := c.connector.GetConnection(ctx, NetworkListUsed, opts...)
	if err != nil {
		return nil, err
	}
	return functions.NewNetworkServiceClient(connection).ListUsed(ctx, in, opts...)
}

// ListConnectedResources is an operation of Yandex.Cloud Functions Network service.
func (c networkClient) ListConnectedResources(ctx context.Context, in *functions.ListConnectedResourcesRequest, opts ...grpc.CallOption) (*functions.ListConnectedResourcesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, NetworkListConnectedResources, opts...)
	if err != nil {
		return nil, err
	}
	return functions.NewNetworkServiceClient(connection).ListConnectedResources(ctx, in, opts...)
}

// TriggerUsedCleanup is an operation of Yandex.Cloud Functions Network service.
func (c networkClient) TriggerUsedCleanup(ctx context.Context, in *functions.TriggerUsedNetworkCleanupRequest, opts ...grpc.CallOption) (*functions.TriggerUsedNetworkCleanupResponse, error) {
	connection, err := c.connector.GetConnection(ctx, NetworkTriggerUsedCleanup, opts...)
	if err != nil {
		return nil, err
	}
	return functions.NewNetworkServiceClient(connection).TriggerUsedCleanup(ctx, in, opts...)
}

var (
	NetworkGetUsed                = protoreflect.FullName("yandex.cloud.serverless.functions.v1.NetworkService.GetUsed")
	NetworkListUsed               = protoreflect.FullName("yandex.cloud.serverless.functions.v1.NetworkService.ListUsed")
	NetworkListConnectedResources = protoreflect.FullName("yandex.cloud.serverless.functions.v1.NetworkService.ListConnectedResources")
	NetworkTriggerUsedCleanup     = protoreflect.FullName("yandex.cloud.serverless.functions.v1.NetworkService.TriggerUsedCleanup")
)
