// Code generated by sdkgen-v2. DO NOT EDIT.
package billingsdk

import (
	"context"

	billing "github.com/yandex-cloud/go-genproto/yandex/cloud/billing/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// SkuClient provides methods for managing Sku resources of Yandex.Cloud Billing.
type SkuClient interface {
	Get(context.Context, *billing.GetSkuRequest, ...grpc.CallOption) (*billing.Sku, error)
	List(context.Context, *billing.ListSkusRequest, ...grpc.CallOption) (*billing.ListSkusResponse, error)
}

var _ SkuClient = skuClient{}

type skuClient struct {
	connector transport.Connector
}

// NewSkuClient returns SkuClient implementation.
func NewSkuClient(connector transport.Connector) SkuClient {
	return skuClient{connector}
}

// Get is an operation of Yandex.Cloud Billing Sku service.
func (c skuClient) Get(ctx context.Context, in *billing.GetSkuRequest, opts ...grpc.CallOption) (*billing.Sku, error) {
	connection, err := c.connector.GetConnection(ctx, SkuGet, opts...)
	if err != nil {
		return nil, err
	}
	return billing.NewSkuServiceClient(connection).Get(ctx, in, opts...)
}

// List is an operation of Yandex.Cloud Billing Sku service.
func (c skuClient) List(ctx context.Context, in *billing.ListSkusRequest, opts ...grpc.CallOption) (*billing.ListSkusResponse, error) {
	connection, err := c.connector.GetConnection(ctx, SkuList, opts...)
	if err != nil {
		return nil, err
	}
	return billing.NewSkuServiceClient(connection).List(ctx, in, opts...)
}

var (
	SkuGet  = protoreflect.FullName("yandex.cloud.billing.v1.SkuService.Get")
	SkuList = protoreflect.FullName("yandex.cloud.billing.v1.SkuService.List")
)
