// Code generated by sdkgen-v2. DO NOT EDIT.
package translatesdk

import (
	"context"

	translate "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/translate/v2"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// TranslationClient provides methods for managing Translation resources of Yandex.Cloud Translate.
type TranslationClient interface {
	Translate(context.Context, *translate.TranslateRequest, ...grpc.CallOption) (*translate.TranslateResponse, error)
	DetectLanguage(context.Context, *translate.DetectLanguageRequest, ...grpc.CallOption) (*translate.DetectLanguageResponse, error)
	ListLanguages(context.Context, *translate.ListLanguagesRequest, ...grpc.CallOption) (*translate.ListLanguagesResponse, error)
}

var _ TranslationClient = translationClient{}

type translationClient struct {
	connector transport.Connector
}

// NewTranslationClient returns TranslationClient implementation.
func NewTranslationClient(connector transport.Connector) TranslationClient {
	return translationClient{connector}
}

// Translate is an operation of Yandex.Cloud Translate Translation service.
func (c translationClient) Translate(ctx context.Context, in *translate.TranslateRequest, opts ...grpc.CallOption) (*translate.TranslateResponse, error) {
	connection, err := c.connector.GetConnection(ctx, TranslationTranslate, opts...)
	if err != nil {
		return nil, err
	}
	return translate.NewTranslationServiceClient(connection).Translate(ctx, in, opts...)
}

// DetectLanguage is an operation of Yandex.Cloud Translate Translation service.
func (c translationClient) DetectLanguage(ctx context.Context, in *translate.DetectLanguageRequest, opts ...grpc.CallOption) (*translate.DetectLanguageResponse, error) {
	connection, err := c.connector.GetConnection(ctx, TranslationDetectLanguage, opts...)
	if err != nil {
		return nil, err
	}
	return translate.NewTranslationServiceClient(connection).DetectLanguage(ctx, in, opts...)
}

// ListLanguages is an operation of Yandex.Cloud Translate Translation service.
func (c translationClient) ListLanguages(ctx context.Context, in *translate.ListLanguagesRequest, opts ...grpc.CallOption) (*translate.ListLanguagesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, TranslationListLanguages, opts...)
	if err != nil {
		return nil, err
	}
	return translate.NewTranslationServiceClient(connection).ListLanguages(ctx, in, opts...)
}

var (
	TranslationTranslate      = protoreflect.FullName("yandex.cloud.ai.translate.v2.TranslationService.Translate")
	TranslationDetectLanguage = protoreflect.FullName("yandex.cloud.ai.translate.v2.TranslationService.DetectLanguage")
	TranslationListLanguages  = protoreflect.FullName("yandex.cloud.ai.translate.v2.TranslationService.ListLanguages")
)
