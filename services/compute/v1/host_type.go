// Code generated by sdkgen-v2. DO NOT EDIT.
package computesdk

import (
	"context"

	compute "github.com/yandex-cloud/go-genproto/yandex/cloud/compute/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// HostTypeClient provides methods for managing HostType resources of Yandex.Cloud Compute.
type HostTypeClient interface {
	Get(context.Context, *compute.GetHostTypeRequest, ...grpc.CallOption) (*compute.HostType, error)
	List(context.Context, *compute.ListHostTypesRequest, ...grpc.CallOption) (*compute.ListHostTypesResponse, error)
}

var _ HostTypeClient = hostTypeClient{}

type hostTypeClient struct {
	connector transport.Connector
}

// NewHostTypeClient returns HostTypeClient implementation.
func NewHostTypeClient(connector transport.Connector) HostTypeClient {
	return hostTypeClient{connector}
}

// Get is an operation of Yandex.Cloud Compute HostType service.
func (c hostTypeClient) Get(ctx context.Context, in *compute.GetHostTypeRequest, opts ...grpc.CallOption) (*compute.HostType, error) {
	connection, err := c.connector.GetConnection(ctx, HostTypeGet, opts...)
	if err != nil {
		return nil, err
	}
	return compute.NewHostTypeServiceClient(connection).Get(ctx, in, opts...)
}

// List is an operation of Yandex.Cloud Compute HostType service.
func (c hostTypeClient) List(ctx context.Context, in *compute.ListHostTypesRequest, opts ...grpc.CallOption) (*compute.ListHostTypesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, HostTypeList, opts...)
	if err != nil {
		return nil, err
	}
	return compute.NewHostTypeServiceClient(connection).List(ctx, in, opts...)
}

var (
	HostTypeGet  = protoreflect.FullName("yandex.cloud.compute.v1.HostTypeService.Get")
	HostTypeList = protoreflect.FullName("yandex.cloud.compute.v1.HostTypeService.List")
)
