// Code generated by sdkgen-v2. DO NOT EDIT.
package operationsdk

import (
	"context"

	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// OperationClient provides methods for managing Operation resources of Yandex.Cloud Operation.
type OperationClient interface {
	Get(context.Context, *operation.GetOperationRequest, ...grpc.CallOption) (*operation.Operation, error)
	Cancel(context.Context, *operation.CancelOperationRequest, ...grpc.CallOption) (*operation.Operation, error)
}

var _ OperationClient = operationClient{}

type operationClient struct {
	connector transport.Connector
}

// NewOperationClient returns OperationClient implementation.
func NewOperationClient(connector transport.Connector) OperationClient {
	return operationClient{connector}
}

// Get is an operation of Yandex.Cloud Operation Operation service.
func (c operationClient) Get(ctx context.Context, in *operation.GetOperationRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	connection, err := c.connector.GetConnection(ctx, OperationGet, opts...)
	if err != nil {
		return nil, err
	}
	return operation.NewOperationServiceClient(connection).Get(ctx, in, opts...)
}

// Cancel is an operation of Yandex.Cloud Operation Operation service.
func (c operationClient) Cancel(ctx context.Context, in *operation.CancelOperationRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	connection, err := c.connector.GetConnection(ctx, OperationCancel, opts...)
	if err != nil {
		return nil, err
	}
	return operation.NewOperationServiceClient(connection).Cancel(ctx, in, opts...)
}

var (
	OperationGet    = protoreflect.FullName("yandex.cloud.operation.OperationService.Get")
	OperationCancel = protoreflect.FullName("yandex.cloud.operation.OperationService.Cancel")
)
