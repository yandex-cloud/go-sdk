// Code generated by sdkgen-v2. DO NOT EDIT.
package agentsdk

import (
	"context"

	agent "github.com/yandex-cloud/go-genproto/yandex/cloud/loadtesting/agent/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// JobClient provides methods for managing Job resources of Yandex.Cloud Agent.
type JobClient interface {
	ClaimStatus(context.Context, *agent.ClaimJobStatusRequest, ...grpc.CallOption) (*agent.ClaimJobStatusResponse, error)
	Get(context.Context, *agent.GetJobRequest, ...grpc.CallOption) (*agent.Job, error)
	GetSignal(context.Context, *agent.JobSignalRequest, ...grpc.CallOption) (*agent.JobSignalResponse, error)
	GetTransientFile(context.Context, *agent.GetJobTransientFile, ...grpc.CallOption) (*agent.File, error)
}

var _ JobClient = jobClient{}

type jobClient struct {
	connector transport.Connector
}

// NewJobClient returns JobClient implementation.
func NewJobClient(connector transport.Connector) JobClient {
	return jobClient{connector}
}

// ClaimStatus is an operation of Yandex.Cloud Agent Job service.
func (c jobClient) ClaimStatus(ctx context.Context, in *agent.ClaimJobStatusRequest, opts ...grpc.CallOption) (*agent.ClaimJobStatusResponse, error) {
	connection, err := c.connector.GetConnection(ctx, JobClaimStatus, opts...)
	if err != nil {
		return nil, err
	}
	return agent.NewJobServiceClient(connection).ClaimStatus(ctx, in, opts...)
}

// Get is an operation of Yandex.Cloud Agent Job service.
func (c jobClient) Get(ctx context.Context, in *agent.GetJobRequest, opts ...grpc.CallOption) (*agent.Job, error) {
	connection, err := c.connector.GetConnection(ctx, JobGet, opts...)
	if err != nil {
		return nil, err
	}
	return agent.NewJobServiceClient(connection).Get(ctx, in, opts...)
}

// GetSignal is an operation of Yandex.Cloud Agent Job service.
func (c jobClient) GetSignal(ctx context.Context, in *agent.JobSignalRequest, opts ...grpc.CallOption) (*agent.JobSignalResponse, error) {
	connection, err := c.connector.GetConnection(ctx, JobGetSignal, opts...)
	if err != nil {
		return nil, err
	}
	return agent.NewJobServiceClient(connection).GetSignal(ctx, in, opts...)
}

// GetTransientFile is an operation of Yandex.Cloud Agent Job service.
func (c jobClient) GetTransientFile(ctx context.Context, in *agent.GetJobTransientFile, opts ...grpc.CallOption) (*agent.File, error) {
	connection, err := c.connector.GetConnection(ctx, JobGetTransientFile, opts...)
	if err != nil {
		return nil, err
	}
	return agent.NewJobServiceClient(connection).GetTransientFile(ctx, in, opts...)
}

var (
	JobClaimStatus      = protoreflect.FullName("yandex.cloud.loadtesting.agent.v1.JobService.ClaimStatus")
	JobGet              = protoreflect.FullName("yandex.cloud.loadtesting.agent.v1.JobService.Get")
	JobGetSignal        = protoreflect.FullName("yandex.cloud.loadtesting.agent.v1.JobService.GetSignal")
	JobGetTransientFile = protoreflect.FullName("yandex.cloud.loadtesting.agent.v1.JobService.GetTransientFile")
)
