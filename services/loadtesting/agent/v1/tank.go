// Code generated by sdkgen-v2. DO NOT EDIT.
package agentsdk

import (
	"context"

	agent "github.com/yandex-cloud/go-genproto/yandex/cloud/loadtesting/agent/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// TankClient provides methods for managing Tank resources of Yandex.Cloud Agent.
type TankClient interface {
	ClaimStatus(context.Context, *agent.ClaimTankStatusRequest, ...grpc.CallOption) (*agent.ClaimTankStatusResponse, error)
}

var _ TankClient = tankClient{}

type tankClient struct {
	connector transport.Connector
}

// NewTankClient returns TankClient implementation.
func NewTankClient(connector transport.Connector) TankClient {
	return tankClient{connector}
}

// ClaimStatus is an operation of Yandex.Cloud Agent Tank service.
func (c tankClient) ClaimStatus(ctx context.Context, in *agent.ClaimTankStatusRequest, opts ...grpc.CallOption) (*agent.ClaimTankStatusResponse, error) {
	connection, err := c.connector.GetConnection(ctx, TankClaimStatus, opts...)
	if err != nil {
		return nil, err
	}
	return agent.NewTankServiceClient(connection).ClaimStatus(ctx, in, opts...)
}

var (
	TankClaimStatus = protoreflect.FullName("yandex.cloud.loadtesting.agent.v1.TankService.ClaimStatus")
)
