// Code generated by sdkgen-v2. DO NOT EDIT.
package apisdk

import (
	"context"

	api "github.com/yandex-cloud/go-genproto/yandex/cloud/loadtesting/api/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// ReportClient provides methods for managing Report resources of Yandex.Cloud Api.
type ReportClient interface {
	GetTable(context.Context, *api.GetTableReportRequest, ...grpc.CallOption) (*api.GetTableReportResponse, error)
	CalculateKpiValues(context.Context, *api.CalculateReportKpiValuesRequest, ...grpc.CallOption) (*api.CalculateReportKpiValuesResponse, error)
}

var _ ReportClient = reportClient{}

type reportClient struct {
	connector transport.Connector
}

// NewReportClient returns ReportClient implementation.
func NewReportClient(connector transport.Connector) ReportClient {
	return reportClient{connector}
}

// GetTable is an operation of Yandex.Cloud Api Report service.
func (c reportClient) GetTable(ctx context.Context, in *api.GetTableReportRequest, opts ...grpc.CallOption) (*api.GetTableReportResponse, error) {
	connection, err := c.connector.GetConnection(ctx, ReportGetTable, opts...)
	if err != nil {
		return nil, err
	}
	return api.NewReportServiceClient(connection).GetTable(ctx, in, opts...)
}

// CalculateKpiValues is an operation of Yandex.Cloud Api Report service.
func (c reportClient) CalculateKpiValues(ctx context.Context, in *api.CalculateReportKpiValuesRequest, opts ...grpc.CallOption) (*api.CalculateReportKpiValuesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, ReportCalculateKpiValues, opts...)
	if err != nil {
		return nil, err
	}
	return api.NewReportServiceClient(connection).CalculateKpiValues(ctx, in, opts...)
}

var (
	ReportGetTable           = protoreflect.FullName("yandex.cloud.loadtesting.api.v1.ReportService.GetTable")
	ReportCalculateKpiValues = protoreflect.FullName("yandex.cloud.loadtesting.api.v1.ReportService.CalculateKpiValues")
)
