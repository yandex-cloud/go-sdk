// Code generated by sdkgen-v2. DO NOT EDIT.
package meteringsdk

import (
	"context"

	metering "github.com/yandex-cloud/go-genproto/yandex/cloud/marketplace/metering/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// ProductUsageClient provides methods for managing ProductUsage resources of Yandex.Cloud Metering.
type ProductUsageClient interface {
	Write(context.Context, *metering.WriteUsageRequest, ...grpc.CallOption) (*metering.WriteUsageResponse, error)
}

var _ ProductUsageClient = productUsageClient{}

type productUsageClient struct {
	connector transport.Connector
}

// NewProductUsageClient returns ProductUsageClient implementation.
func NewProductUsageClient(connector transport.Connector) ProductUsageClient {
	return productUsageClient{connector}
}

// Write is an operation of Yandex.Cloud Metering ProductUsage service.
func (c productUsageClient) Write(ctx context.Context, in *metering.WriteUsageRequest, opts ...grpc.CallOption) (*metering.WriteUsageResponse, error) {
	connection, err := c.connector.GetConnection(ctx, ProductUsageWrite, opts...)
	if err != nil {
		return nil, err
	}
	return metering.NewProductUsageServiceClient(connection).Write(ctx, in, opts...)
}

var (
	ProductUsageWrite = protoreflect.FullName("yandex.cloud.marketplace.metering.v1.ProductUsageService.Write")
)
