// Code generated by sdkgen-v2. DO NOT EDIT.
package meteringsdk

import (
	"context"

	metering "github.com/yandex-cloud/go-genproto/yandex/cloud/marketplace/metering/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// ImageProductUsageClient provides methods for managing ImageProductUsage resources of Yandex.Cloud Metering.
type ImageProductUsageClient interface {
	Write(context.Context, *metering.WriteImageProductUsageRequest, ...grpc.CallOption) (*metering.WriteImageProductUsageResponse, error)
}

var _ ImageProductUsageClient = imageProductUsageClient{}

type imageProductUsageClient struct {
	connector transport.Connector
}

// NewImageProductUsageClient returns ImageProductUsageClient implementation.
func NewImageProductUsageClient(connector transport.Connector) ImageProductUsageClient {
	return imageProductUsageClient{connector}
}

// Write is an operation of Yandex.Cloud Metering ImageProductUsage service.
func (c imageProductUsageClient) Write(ctx context.Context, in *metering.WriteImageProductUsageRequest, opts ...grpc.CallOption) (*metering.WriteImageProductUsageResponse, error) {
	connection, err := c.connector.GetConnection(ctx, ImageProductUsageWrite, opts...)
	if err != nil {
		return nil, err
	}
	return metering.NewImageProductUsageServiceClient(connection).Write(ctx, in, opts...)
}

var (
	ImageProductUsageWrite = protoreflect.FullName("yandex.cloud.marketplace.metering.v1.ImageProductUsageService.Write")
)
