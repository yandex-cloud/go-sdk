// Code generated by sdkgen-v2. DO NOT EDIT.
package containerregistrysdk

import (
	"context"

	containerregistry "github.com/yandex-cloud/go-genproto/yandex/cloud/containerregistry/v1"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	sdkop "github.com/yandex-cloud/go-sdk/v2/pkg/operation"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// ScannerClient provides methods for managing Scanner resources of Yandex.Cloud ContainerRegistry.
type ScannerClient interface {
	Scan(context.Context, *containerregistry.ScanRequest, ...grpc.CallOption) (*ScannerScanOperation, error)
	Get(context.Context, *containerregistry.GetScanResultRequest, ...grpc.CallOption) (*containerregistry.ScanResult, error)
	GetLast(context.Context, *containerregistry.GetLastScanResultRequest, ...grpc.CallOption) (*containerregistry.ScanResult, error)
	List(context.Context, *containerregistry.ListScanResultsRequest, ...grpc.CallOption) (*containerregistry.ListScanResultsResponse, error)
	ListVulnerabilities(context.Context, *containerregistry.ListVulnerabilitiesRequest, ...grpc.CallOption) (*containerregistry.ListVulnerabilitiesResponse, error)
}

var _ ScannerClient = scannerClient{}

type scannerClient struct {
	connector transport.Connector
}

// NewScannerClient returns ScannerClient implementation.
func NewScannerClient(connector transport.Connector) ScannerClient {
	return scannerClient{connector}
}

// ScannerScanOperation is used to monitor the state of Scan operations.
type ScannerScanOperation struct {
	sdkop.Operation
}

// Metadata retrieves the operation metadata.
func (o *ScannerScanOperation) Metadata() *containerregistry.ScanMetadata {
	return o.Operation.Metadata().(*containerregistry.ScanMetadata)
}

// Response retrieves the operation response.
func (o *ScannerScanOperation) Response() *containerregistry.ScanResult {
	return o.Operation.Response().(*containerregistry.ScanResult)
}

// Wait polls the operation until it's done.
func (o *ScannerScanOperation) Wait(ctx context.Context, opts ...grpc.CallOption) (*containerregistry.ScanResult, error) {
	abstract, err := o.Operation.Wait(ctx, opts...)
	response, _ := abstract.(*containerregistry.ScanResult)
	return response, err
}

// WaitInterval polls the operation until it's done with custom interval.
func (o *ScannerScanOperation) WaitInterval(ctx context.Context, pollInterval sdkop.PollIntervalFunc, opts ...grpc.CallOption) (*containerregistry.ScanResult, error) {
	abstract, err := o.Operation.WaitInterval(ctx, pollInterval, opts...)
	response, _ := abstract.(*containerregistry.ScanResult)
	return response, err
}

// Scan is an operation of Yandex.Cloud ContainerRegistry Scanner service.
// It returns an object which should be used to monitor the operation state.
func (c scannerClient) Scan(ctx context.Context, in *containerregistry.ScanRequest, opts ...grpc.CallOption) (*ScannerScanOperation, error) {
	connection, err := c.connector.GetConnection(ctx, ScannerScan, opts...)
	if err != nil {
		return nil, err
	}
	pb, err := containerregistry.NewScannerServiceClient(connection).Scan(ctx, in, opts...)
	if err != nil {
		return nil, err
	}
	op, err := sdkop.NewOperation(pb, &sdkop.Concretization{
		Poll:         c.pollOperation,
		MetadataType: (*containerregistry.ScanMetadata)(nil),
		ResponseType: (*containerregistry.ScanResult)(nil),
	})
	if err != nil {
		return nil, err
	}
	return &ScannerScanOperation{*op}, nil
}

// Get is an operation of Yandex.Cloud ContainerRegistry Scanner service.
func (c scannerClient) Get(ctx context.Context, in *containerregistry.GetScanResultRequest, opts ...grpc.CallOption) (*containerregistry.ScanResult, error) {
	connection, err := c.connector.GetConnection(ctx, ScannerGet, opts...)
	if err != nil {
		return nil, err
	}
	return containerregistry.NewScannerServiceClient(connection).Get(ctx, in, opts...)
}

// GetLast is an operation of Yandex.Cloud ContainerRegistry Scanner service.
func (c scannerClient) GetLast(ctx context.Context, in *containerregistry.GetLastScanResultRequest, opts ...grpc.CallOption) (*containerregistry.ScanResult, error) {
	connection, err := c.connector.GetConnection(ctx, ScannerGetLast, opts...)
	if err != nil {
		return nil, err
	}
	return containerregistry.NewScannerServiceClient(connection).GetLast(ctx, in, opts...)
}

// List is an operation of Yandex.Cloud ContainerRegistry Scanner service.
func (c scannerClient) List(ctx context.Context, in *containerregistry.ListScanResultsRequest, opts ...grpc.CallOption) (*containerregistry.ListScanResultsResponse, error) {
	connection, err := c.connector.GetConnection(ctx, ScannerList, opts...)
	if err != nil {
		return nil, err
	}
	return containerregistry.NewScannerServiceClient(connection).List(ctx, in, opts...)
}

// ListVulnerabilities is an operation of Yandex.Cloud ContainerRegistry Scanner service.
func (c scannerClient) ListVulnerabilities(ctx context.Context, in *containerregistry.ListVulnerabilitiesRequest, opts ...grpc.CallOption) (*containerregistry.ListVulnerabilitiesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, ScannerListVulnerabilities, opts...)
	if err != nil {
		return nil, err
	}
	return containerregistry.NewScannerServiceClient(connection).ListVulnerabilities(ctx, in, opts...)
}

// pollOperation returns the current state of the polled operation.
func (c scannerClient) pollOperation(ctx context.Context, operationId string, opts ...grpc.CallOption) (sdkop.YCOperation, error) {
	connection, err := c.connector.GetConnection(ctx, ScannerOperationPoller, opts...)
	if err != nil {
		return nil, err
	}
	return operation.NewOperationServiceClient(connection).Get(ctx, &operation.GetOperationRequest{OperationId: operationId}, opts...)
}

var (
	ScannerScan                = protoreflect.FullName("yandex.cloud.containerregistry.v1.ScannerService.Scan")
	ScannerGet                 = protoreflect.FullName("yandex.cloud.containerregistry.v1.ScannerService.Get")
	ScannerGetLast             = protoreflect.FullName("yandex.cloud.containerregistry.v1.ScannerService.GetLast")
	ScannerList                = protoreflect.FullName("yandex.cloud.containerregistry.v1.ScannerService.List")
	ScannerListVulnerabilities = protoreflect.FullName("yandex.cloud.containerregistry.v1.ScannerService.ListVulnerabilities")
	ScannerOperationPoller     = protoreflect.FullName("yandex.cloud.operation.OperationService.Get")
)
