// Code generated by sdkgen-v2. DO NOT EDIT.
package lockboxsdk

import (
	"context"

	lockbox "github.com/yandex-cloud/go-genproto/yandex/cloud/lockbox/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// PayloadClient provides methods for managing Payload resources of Yandex.Cloud Lockbox.
type PayloadClient interface {
	Get(context.Context, *lockbox.GetPayloadRequest, ...grpc.CallOption) (*lockbox.Payload, error)
	GetEx(context.Context, *lockbox.GetExRequest, ...grpc.CallOption) (*lockbox.GetExResponse, error)
}

var _ PayloadClient = payloadClient{}

type payloadClient struct {
	connector transport.Connector
}

// NewPayloadClient returns PayloadClient implementation.
func NewPayloadClient(connector transport.Connector) PayloadClient {
	return payloadClient{connector}
}

// Get is an operation of Yandex.Cloud Lockbox Payload service.
func (c payloadClient) Get(ctx context.Context, in *lockbox.GetPayloadRequest, opts ...grpc.CallOption) (*lockbox.Payload, error) {
	connection, err := c.connector.GetConnection(ctx, PayloadGet, opts...)
	if err != nil {
		return nil, err
	}
	return lockbox.NewPayloadServiceClient(connection).Get(ctx, in, opts...)
}

// GetEx is an operation of Yandex.Cloud Lockbox Payload service.
func (c payloadClient) GetEx(ctx context.Context, in *lockbox.GetExRequest, opts ...grpc.CallOption) (*lockbox.GetExResponse, error) {
	connection, err := c.connector.GetConnection(ctx, PayloadGetEx, opts...)
	if err != nil {
		return nil, err
	}
	return lockbox.NewPayloadServiceClient(connection).GetEx(ctx, in, opts...)
}

var (
	PayloadGet   = protoreflect.FullName("yandex.cloud.lockbox.v1.PayloadService.Get")
	PayloadGetEx = protoreflect.FullName("yandex.cloud.lockbox.v1.PayloadService.GetEx")
)
