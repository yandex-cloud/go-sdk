// Code generated by sdkgen-v2. DO NOT EDIT.
package loggingsdk

import (
	"context"

	logging "github.com/yandex-cloud/go-genproto/yandex/cloud/logging/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// LogIngestionClient provides methods for managing LogIngestion resources of Yandex.Cloud Logging.
type LogIngestionClient interface {
	Write(context.Context, *logging.WriteRequest, ...grpc.CallOption) (*logging.WriteResponse, error)
}

var _ LogIngestionClient = logIngestionClient{}

type logIngestionClient struct {
	connector transport.Connector
}

// NewLogIngestionClient returns LogIngestionClient implementation.
func NewLogIngestionClient(connector transport.Connector) LogIngestionClient {
	return logIngestionClient{connector}
}

// Write is an operation of Yandex.Cloud Logging LogIngestion service.
func (c logIngestionClient) Write(ctx context.Context, in *logging.WriteRequest, opts ...grpc.CallOption) (*logging.WriteResponse, error) {
	connection, err := c.connector.GetConnection(ctx, LogIngestionWrite, opts...)
	if err != nil {
		return nil, err
	}
	return logging.NewLogIngestionServiceClient(connection).Write(ctx, in, opts...)
}

var (
	LogIngestionWrite = protoreflect.FullName("yandex.cloud.logging.v1.LogIngestionService.Write")
)
