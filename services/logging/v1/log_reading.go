// Code generated by sdkgen-v2. DO NOT EDIT.
package loggingsdk

import (
	"context"

	logging "github.com/yandex-cloud/go-genproto/yandex/cloud/logging/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// LogReadingClient provides methods for managing LogReading resources of Yandex.Cloud Logging.
type LogReadingClient interface {
	Read(context.Context, *logging.ReadRequest, ...grpc.CallOption) (*logging.ReadResponse, error)
}

var _ LogReadingClient = logReadingClient{}

type logReadingClient struct {
	connector transport.Connector
}

// NewLogReadingClient returns LogReadingClient implementation.
func NewLogReadingClient(connector transport.Connector) LogReadingClient {
	return logReadingClient{connector}
}

// Read is an operation of Yandex.Cloud Logging LogReading service.
func (c logReadingClient) Read(ctx context.Context, in *logging.ReadRequest, opts ...grpc.CallOption) (*logging.ReadResponse, error) {
	connection, err := c.connector.GetConnection(ctx, LogReadingRead, opts...)
	if err != nil {
		return nil, err
	}
	return logging.NewLogReadingServiceClient(connection).Read(ctx, in, opts...)
}

var (
	LogReadingRead = protoreflect.FullName("yandex.cloud.logging.v1.LogReadingService.Read")
)
