// Code generated by sdkgen-v2. DO NOT EDIT.
package monitoringsdk

import (
	"context"

	monitoring "github.com/yandex-cloud/go-genproto/yandex/cloud/monitoring/v2"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// MetricsMetaClient provides methods for managing MetricsMeta resources of Yandex.Cloud Monitoring.
type MetricsMetaClient interface {
	ListMetrics(context.Context, *monitoring.ListMetricsRequest, ...grpc.CallOption) (*monitoring.ListMetricsResponse, error)
	ListMetricNames(context.Context, *monitoring.ListMetricNamesRequest, ...grpc.CallOption) (*monitoring.ListMetricNamesResponse, error)
	ListLabelKeys(context.Context, *monitoring.ListLabelKeysRequest, ...grpc.CallOption) (*monitoring.ListLabelKeysResponse, error)
	ListLabelValues(context.Context, *monitoring.ListLabelValuesRequest, ...grpc.CallOption) (*monitoring.ListLabelValuesResponse, error)
}

var _ MetricsMetaClient = metricsMetaClient{}

type metricsMetaClient struct {
	connector transport.Connector
}

// NewMetricsMetaClient returns MetricsMetaClient implementation.
func NewMetricsMetaClient(connector transport.Connector) MetricsMetaClient {
	return metricsMetaClient{connector}
}

// ListMetrics is an operation of Yandex.Cloud Monitoring MetricsMeta service.
func (c metricsMetaClient) ListMetrics(ctx context.Context, in *monitoring.ListMetricsRequest, opts ...grpc.CallOption) (*monitoring.ListMetricsResponse, error) {
	connection, err := c.connector.GetConnection(ctx, MetricsMetaListMetrics, opts...)
	if err != nil {
		return nil, err
	}
	return monitoring.NewMetricsMetaServiceClient(connection).ListMetrics(ctx, in, opts...)
}

// ListMetricNames is an operation of Yandex.Cloud Monitoring MetricsMeta service.
func (c metricsMetaClient) ListMetricNames(ctx context.Context, in *monitoring.ListMetricNamesRequest, opts ...grpc.CallOption) (*monitoring.ListMetricNamesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, MetricsMetaListMetricNames, opts...)
	if err != nil {
		return nil, err
	}
	return monitoring.NewMetricsMetaServiceClient(connection).ListMetricNames(ctx, in, opts...)
}

// ListLabelKeys is an operation of Yandex.Cloud Monitoring MetricsMeta service.
func (c metricsMetaClient) ListLabelKeys(ctx context.Context, in *monitoring.ListLabelKeysRequest, opts ...grpc.CallOption) (*monitoring.ListLabelKeysResponse, error) {
	connection, err := c.connector.GetConnection(ctx, MetricsMetaListLabelKeys, opts...)
	if err != nil {
		return nil, err
	}
	return monitoring.NewMetricsMetaServiceClient(connection).ListLabelKeys(ctx, in, opts...)
}

// ListLabelValues is an operation of Yandex.Cloud Monitoring MetricsMeta service.
func (c metricsMetaClient) ListLabelValues(ctx context.Context, in *monitoring.ListLabelValuesRequest, opts ...grpc.CallOption) (*monitoring.ListLabelValuesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, MetricsMetaListLabelValues, opts...)
	if err != nil {
		return nil, err
	}
	return monitoring.NewMetricsMetaServiceClient(connection).ListLabelValues(ctx, in, opts...)
}

var (
	MetricsMetaListMetrics     = protoreflect.FullName("yandex.cloud.monitoring.v2.MetricsMetaService.ListMetrics")
	MetricsMetaListMetricNames = protoreflect.FullName("yandex.cloud.monitoring.v2.MetricsMetaService.ListMetricNames")
	MetricsMetaListLabelKeys   = protoreflect.FullName("yandex.cloud.monitoring.v2.MetricsMetaService.ListLabelKeys")
	MetricsMetaListLabelValues = protoreflect.FullName("yandex.cloud.monitoring.v2.MetricsMetaService.ListLabelValues")
)
