// Code generated by sdkgen-v2. DO NOT EDIT.
package ydbsdk

import (
	"context"

	ydb "github.com/yandex-cloud/go-genproto/yandex/cloud/ydb/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// StorageTypeClient provides methods for managing StorageType resources of Yandex.Cloud YDB.
type StorageTypeClient interface {
	Get(context.Context, *ydb.GetStorageTypeRequest, ...grpc.CallOption) (*ydb.StorageType, error)
	List(context.Context, *ydb.ListStorageTypesRequest, ...grpc.CallOption) (*ydb.ListStorageTypesResponse, error)
}

var _ StorageTypeClient = storageTypeClient{}

type storageTypeClient struct {
	connector transport.Connector
}

// NewStorageTypeClient returns StorageTypeClient implementation.
func NewStorageTypeClient(connector transport.Connector) StorageTypeClient {
	return storageTypeClient{connector}
}

// Get is an operation of Yandex.Cloud YDB StorageType service.
func (c storageTypeClient) Get(ctx context.Context, in *ydb.GetStorageTypeRequest, opts ...grpc.CallOption) (*ydb.StorageType, error) {
	connection, err := c.connector.GetConnection(ctx, StorageTypeGet, opts...)
	if err != nil {
		return nil, err
	}
	return ydb.NewStorageTypeServiceClient(connection).Get(ctx, in, opts...)
}

// List is an operation of Yandex.Cloud YDB StorageType service.
func (c storageTypeClient) List(ctx context.Context, in *ydb.ListStorageTypesRequest, opts ...grpc.CallOption) (*ydb.ListStorageTypesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, StorageTypeList, opts...)
	if err != nil {
		return nil, err
	}
	return ydb.NewStorageTypeServiceClient(connection).List(ctx, in, opts...)
}

var (
	StorageTypeGet  = protoreflect.FullName("yandex.cloud.ydb.v1.StorageTypeService.Get")
	StorageTypeList = protoreflect.FullName("yandex.cloud.ydb.v1.StorageTypeService.List")
)
