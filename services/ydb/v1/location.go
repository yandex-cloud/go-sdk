// Code generated by sdkgen-v2. DO NOT EDIT.
package ydbsdk

import (
	"context"

	ydb "github.com/yandex-cloud/go-genproto/yandex/cloud/ydb/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// LocationClient provides methods for managing Location resources of Yandex.Cloud YDB.
type LocationClient interface {
	Get(context.Context, *ydb.GetLocationRequest, ...grpc.CallOption) (*ydb.Location, error)
	List(context.Context, *ydb.ListLocationsRequest, ...grpc.CallOption) (*ydb.ListLocationsResponse, error)
}

var _ LocationClient = locationClient{}

type locationClient struct {
	connector transport.Connector
}

// NewLocationClient returns LocationClient implementation.
func NewLocationClient(connector transport.Connector) LocationClient {
	return locationClient{connector}
}

// Get is an operation of Yandex.Cloud YDB Location service.
func (c locationClient) Get(ctx context.Context, in *ydb.GetLocationRequest, opts ...grpc.CallOption) (*ydb.Location, error) {
	connection, err := c.connector.GetConnection(ctx, LocationGet, opts...)
	if err != nil {
		return nil, err
	}
	return ydb.NewLocationServiceClient(connection).Get(ctx, in, opts...)
}

// List is an operation of Yandex.Cloud YDB Location service.
func (c locationClient) List(ctx context.Context, in *ydb.ListLocationsRequest, opts ...grpc.CallOption) (*ydb.ListLocationsResponse, error) {
	connection, err := c.connector.GetConnection(ctx, LocationList, opts...)
	if err != nil {
		return nil, err
	}
	return ydb.NewLocationServiceClient(connection).List(ctx, in, opts...)
}

var (
	LocationGet  = protoreflect.FullName("yandex.cloud.ydb.v1.LocationService.Get")
	LocationList = protoreflect.FullName("yandex.cloud.ydb.v1.LocationService.List")
)
