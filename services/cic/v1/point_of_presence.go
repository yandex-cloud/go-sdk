// Code generated by sdkgen-v2. DO NOT EDIT.
package cicsdk

import (
	"context"

	cic "github.com/yandex-cloud/go-genproto/yandex/cloud/cic/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// PointOfPresenceClient provides methods for managing PointOfPresence resources of Yandex.Cloud Cic.
type PointOfPresenceClient interface {
	Get(context.Context, *cic.GetPointOfPresenceRequest, ...grpc.CallOption) (*cic.PointOfPresence, error)
	List(context.Context, *cic.ListPointOfPresencesRequest, ...grpc.CallOption) (*cic.ListPointOfPresencesResponse, error)
}

var _ PointOfPresenceClient = pointOfPresenceClient{}

type pointOfPresenceClient struct {
	connector transport.Connector
}

// NewPointOfPresenceClient returns PointOfPresenceClient implementation.
func NewPointOfPresenceClient(connector transport.Connector) PointOfPresenceClient {
	return pointOfPresenceClient{connector}
}

// Get is an operation of Yandex.Cloud Cic PointOfPresence service.
func (c pointOfPresenceClient) Get(ctx context.Context, in *cic.GetPointOfPresenceRequest, opts ...grpc.CallOption) (*cic.PointOfPresence, error) {
	connection, err := c.connector.GetConnection(ctx, PointOfPresenceGet, opts...)
	if err != nil {
		return nil, err
	}
	return cic.NewPointOfPresenceServiceClient(connection).Get(ctx, in, opts...)
}

// List is an operation of Yandex.Cloud Cic PointOfPresence service.
func (c pointOfPresenceClient) List(ctx context.Context, in *cic.ListPointOfPresencesRequest, opts ...grpc.CallOption) (*cic.ListPointOfPresencesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, PointOfPresenceList, opts...)
	if err != nil {
		return nil, err
	}
	return cic.NewPointOfPresenceServiceClient(connection).List(ctx, in, opts...)
}

var (
	PointOfPresenceGet  = protoreflect.FullName("yandex.cloud.cic.v1.PointOfPresenceService.Get")
	PointOfPresenceList = protoreflect.FullName("yandex.cloud.cic.v1.PointOfPresenceService.List")
)
