// Code generated by sdkgen-v2. DO NOT EDIT.
package brokersdk

import (
	"context"

	broker "github.com/yandex-cloud/go-genproto/yandex/cloud/iot/broker/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// BrokerDataClient provides methods for managing BrokerData resources of Yandex.Cloud Broker.
type BrokerDataClient interface {
	Publish(context.Context, *broker.PublishBrokerDataRequest, ...grpc.CallOption) (*broker.PublishBrokerDataResponse, error)
}

var _ BrokerDataClient = brokerDataClient{}

type brokerDataClient struct {
	connector transport.Connector
}

// NewBrokerDataClient returns BrokerDataClient implementation.
func NewBrokerDataClient(connector transport.Connector) BrokerDataClient {
	return brokerDataClient{connector}
}

// Publish is an operation of Yandex.Cloud Broker BrokerData service.
func (c brokerDataClient) Publish(ctx context.Context, in *broker.PublishBrokerDataRequest, opts ...grpc.CallOption) (*broker.PublishBrokerDataResponse, error) {
	connection, err := c.connector.GetConnection(ctx, BrokerDataPublish, opts...)
	if err != nil {
		return nil, err
	}
	return broker.NewBrokerDataServiceClient(connection).Publish(ctx, in, opts...)
}

var (
	BrokerDataPublish = protoreflect.FullName("yandex.cloud.iot.broker.v1.BrokerDataService.Publish")
)
