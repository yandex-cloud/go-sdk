// Code generated by sdkgen-v2. DO NOT EDIT.
package postgresqlsdk

import (
	"context"

	postgresql "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// BackupRetentionPolicyClient provides methods for managing BackupRetentionPolicy resources of Yandex.Cloud PostgreSQL.
type BackupRetentionPolicyClient interface {
	List(context.Context, *postgresql.ListBackupRetentionPoliciesRequest, ...grpc.CallOption) (*postgresql.ListBackupRetentionPoliciesResponse, error)
	Create(context.Context, *postgresql.CreateBackupRetentionPolicyRequest, ...grpc.CallOption) (*postgresql.CreateBackupRetentionPolicyResponse, error)
	Delete(context.Context, *postgresql.DeleteBackupRetentionPolicyRequest, ...grpc.CallOption) (*postgresql.DeleteBackupRetentionPolicyResponse, error)
}

var _ BackupRetentionPolicyClient = backupRetentionPolicyClient{}

type backupRetentionPolicyClient struct {
	connector transport.Connector
}

// NewBackupRetentionPolicyClient returns BackupRetentionPolicyClient implementation.
func NewBackupRetentionPolicyClient(connector transport.Connector) BackupRetentionPolicyClient {
	return backupRetentionPolicyClient{connector}
}

// List is an operation of Yandex.Cloud PostgreSQL BackupRetentionPolicy service.
func (c backupRetentionPolicyClient) List(ctx context.Context, in *postgresql.ListBackupRetentionPoliciesRequest, opts ...grpc.CallOption) (*postgresql.ListBackupRetentionPoliciesResponse, error) {
	connection, err := c.connector.GetConnection(ctx, BackupRetentionPolicyList, opts...)
	if err != nil {
		return nil, err
	}
	return postgresql.NewBackupRetentionPolicyServiceClient(connection).List(ctx, in, opts...)
}

// Create is an operation of Yandex.Cloud PostgreSQL BackupRetentionPolicy service.
func (c backupRetentionPolicyClient) Create(ctx context.Context, in *postgresql.CreateBackupRetentionPolicyRequest, opts ...grpc.CallOption) (*postgresql.CreateBackupRetentionPolicyResponse, error) {
	connection, err := c.connector.GetConnection(ctx, BackupRetentionPolicyCreate, opts...)
	if err != nil {
		return nil, err
	}
	return postgresql.NewBackupRetentionPolicyServiceClient(connection).Create(ctx, in, opts...)
}

// Delete is an operation of Yandex.Cloud PostgreSQL BackupRetentionPolicy service.
func (c backupRetentionPolicyClient) Delete(ctx context.Context, in *postgresql.DeleteBackupRetentionPolicyRequest, opts ...grpc.CallOption) (*postgresql.DeleteBackupRetentionPolicyResponse, error) {
	connection, err := c.connector.GetConnection(ctx, BackupRetentionPolicyDelete, opts...)
	if err != nil {
		return nil, err
	}
	return postgresql.NewBackupRetentionPolicyServiceClient(connection).Delete(ctx, in, opts...)
}

var (
	BackupRetentionPolicyList   = protoreflect.FullName("yandex.cloud.mdb.postgresql.v1.BackupRetentionPolicyService.List")
	BackupRetentionPolicyCreate = protoreflect.FullName("yandex.cloud.mdb.postgresql.v1.BackupRetentionPolicyService.Create")
	BackupRetentionPolicyDelete = protoreflect.FullName("yandex.cloud.mdb.postgresql.v1.BackupRetentionPolicyService.Delete")
)
