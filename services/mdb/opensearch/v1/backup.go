// Code generated by sdkgen-v2. DO NOT EDIT.
package opensearchsdk

import (
	"context"

	opensearch "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/opensearch/v1"
	"github.com/yandex-cloud/go-sdk/v2/pkg/transport"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// BackupClient provides methods for managing Backup resources of Yandex.Cloud Opensearch.
type BackupClient interface {
	Get(context.Context, *opensearch.GetBackupRequest, ...grpc.CallOption) (*opensearch.Backup, error)
	List(context.Context, *opensearch.ListBackupsRequest, ...grpc.CallOption) (*opensearch.ListBackupsResponse, error)
}

var _ BackupClient = backupClient{}

type backupClient struct {
	connector transport.Connector
}

// NewBackupClient returns BackupClient implementation.
func NewBackupClient(connector transport.Connector) BackupClient {
	return backupClient{connector}
}

// Get is an operation of Yandex.Cloud Opensearch Backup service.
func (c backupClient) Get(ctx context.Context, in *opensearch.GetBackupRequest, opts ...grpc.CallOption) (*opensearch.Backup, error) {
	connection, err := c.connector.GetConnection(ctx, BackupGet, opts...)
	if err != nil {
		return nil, err
	}
	return opensearch.NewBackupServiceClient(connection).Get(ctx, in, opts...)
}

// List is an operation of Yandex.Cloud Opensearch Backup service.
func (c backupClient) List(ctx context.Context, in *opensearch.ListBackupsRequest, opts ...grpc.CallOption) (*opensearch.ListBackupsResponse, error) {
	connection, err := c.connector.GetConnection(ctx, BackupList, opts...)
	if err != nil {
		return nil, err
	}
	return opensearch.NewBackupServiceClient(connection).List(ctx, in, opts...)
}

var (
	BackupGet  = protoreflect.FullName("yandex.cloud.mdb.opensearch.v1.BackupService.Get")
	BackupList = protoreflect.FullName("yandex.cloud.mdb.opensearch.v1.BackupService.List")
)
