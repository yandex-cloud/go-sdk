// Code generated by sdkgen. DO NOT EDIT.

package eventrouter

import (
	"context"

	"google.golang.org/grpc"
)

// Eventrouter provides access to "eventrouter" component of Yandex.Cloud
type Eventrouter struct {
	getConn func(ctx context.Context) (*grpc.ClientConn, error)
}

// NewEventrouter creates instance of Eventrouter
func NewEventrouter(g func(ctx context.Context) (*grpc.ClientConn, error)) *Eventrouter {
	return &Eventrouter{g}
}

// Bus gets BusService client
func (e *Eventrouter) Bus() *BusServiceClient {
	return &BusServiceClient{getConn: e.getConn}
}

// Connector gets ConnectorService client
func (e *Eventrouter) Connector() *ConnectorServiceClient {
	return &ConnectorServiceClient{getConn: e.getConn}
}

// Rule gets RuleService client
func (e *Eventrouter) Rule() *RuleServiceClient {
	return &RuleServiceClient{getConn: e.getConn}
}

// Event gets EventService client
func (e *Eventrouter) Event() *EventServiceClient {
	return &EventServiceClient{getConn: e.getConn}
}
