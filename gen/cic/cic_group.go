// Code generated by sdkgen. DO NOT EDIT.

package cic

import (
	"context"

	"google.golang.org/grpc"
)

// CloudInterconnect provides access to "cic" component of Yandex.Cloud
type CloudInterconnect struct {
	getConn func(ctx context.Context) (*grpc.ClientConn, error)
}

// NewCloudInterconnect creates instance of CloudInterconnect
func NewCloudInterconnect(g func(ctx context.Context) (*grpc.ClientConn, error)) *CloudInterconnect {
	return &CloudInterconnect{g}
}

// Partner gets PartnerService client
func (c *CloudInterconnect) Partner() *PartnerServiceClient {
	return &PartnerServiceClient{getConn: c.getConn}
}

// PointOfPresence gets PointOfPresenceService client
func (c *CloudInterconnect) PointOfPresence() *PointOfPresenceServiceClient {
	return &PointOfPresenceServiceClient{getConn: c.getConn}
}

// TrunkConnection gets TrunkConnectionService client
func (c *CloudInterconnect) TrunkConnection() *TrunkConnectionServiceClient {
	return &TrunkConnectionServiceClient{getConn: c.getConn}
}

// PublicConnection gets PublicConnectionService client
func (c *CloudInterconnect) PublicConnection() *PublicConnectionServiceClient {
	return &PublicConnectionServiceClient{getConn: c.getConn}
}

// PrivateConnection gets PrivateConnectionService client
func (c *CloudInterconnect) PrivateConnection() *PrivateConnectionServiceClient {
	return &PrivateConnectionServiceClient{getConn: c.getConn}
}
