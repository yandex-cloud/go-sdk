syntax = "proto3";

package yandex.cloud.organizationmanager.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/organizationmanager/v1;organizationmanager";
option java_package = "yandex.cloud.api.organizationmanager.v1";

service OsLoginService {
  // OsLogin settings
  rpc GetSettings (GetOsLoginSettingsRequest) returns (OsLoginSettings) {
    option (google.api.http) = { get: "/organization-manager/v1/organizations/{organization_id}/osLoginSettings" };
  }
  rpc UpdateSettings (UpdateOsLoginSettingsRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/organization-manager/v1/organizations/{organization_id}/osLoginSettings" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateOsLoginSettingsMetadata"
      response: "OsLoginSettings"
    };
  }

  // OsLogin Profiles
  rpc GetProfile (GetOsLoginProfileRequest) returns (OsLoginProfile) {
    option (google.api.http) = { get: "/organization-manager/v1/osLoginProfiles/{os_login_profile_id}" };
  }
  rpc ListProfiles (ListOsLoginProfilesRequest) returns (ListOsLoginProfilesResponse) {
    option (google.api.http) = { get: "/organization-manager/v1/osLoginProfiles" };
  }
  rpc CreateProfile (CreateOsLoginProfileRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/organization-manager/v1/osLoginProfiles" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateOsLoginProfileMetadata"
      response: "OsLoginProfile"
    };
  }
  rpc UpdateProfile (UpdateOsLoginProfileRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/organization-manager/v1/osLoginProfiles/{os_login_profile_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateOsLoginProfileMetadata"
      response: "OsLoginProfile"
    };
  }
  // Sets a profile as a default for the subject assigned to this profile
  rpc SetDefaultProfile (SetDefaultOsLoginProfileRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/organization-manager/v1/osLoginProfiles/{os_login_profile_id}:setDefault" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "SetDefaultOsLoginProfileMetadata"
      response: "OsLoginProfile"
    };
  }
  rpc DeleteProfile (DeleteOsLoginProfileRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/organization-manager/v1/osLoginProfiles/{id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteOsLoginProfileMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message GetOsLoginSettingsRequest {
  string organization_id = 1 [(required) = true, (length) = "<=50"];
}

message OsLoginSettings {
  UserSshKeySettings user_ssh_key_settings = 1;
  SshCertificateSettings ssh_certificate_settings = 2;
}

message UserSshKeySettings {
  bool enabled = 1;
  bool allow_manage_own_keys = 2;
}

message SshCertificateSettings {
  bool enabled = 1;
}

message UpdateOsLoginSettingsRequest {
  string organization_id = 1 [(required) = true, (length) = "<=50"];
  UserSshKeySettings user_ssh_key_settings = 2;
  SshCertificateSettings ssh_certificate_settings = 3;
  google.protobuf.FieldMask update_mask = 4;

  message UserSshKeySettings {
    bool enabled = 1;
    bool allow_manage_own_keys = 2;
  }

  message SshCertificateSettings {
    bool enabled = 1;
  }
}

message SetDefaultOsLoginProfileRequest {
  string os_login_profile_id = 1 [(required) = true, (length) = "<=50"];
}

message GetOsLoginProfileRequest {
  string os_login_profile_id = 1 [(required) = true, (length) = "<=50"];
}

message ListOsLoginProfilesRequest {
  string organization_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=2000"];

  // A filter expression that filters profiles listed in the response.
  // The expression must specify:
  // 1. The field name. Currently you can use filtering by subject_id, uid or login.
  // 2. An `=` operator.
  // 3. The value in double quotes (`"`).
  // E.g. login="example-login"
  string filter = 4 [(length) = "<=1000"];
}

message ListOsLoginProfilesResponse {
  repeated OsLoginProfile profiles = 1;
  string next_page_token = 2;
}

message OsLoginProfile {
  string id = 1;
  string organization_id = 2;
  string subject_id = 3;
  string login = 4;
  int64 uid = 5;
  bool is_default = 6;
  string home_directory = 7;
  string shell = 8;
}

message UpdateOsLoginProfileRequest {
  string os_login_profile_id = 1 [(required) = true, (length) = "<=50"];
  string login = 2 [(required) = true, (length) = "<=32", (pattern)="^[^.]*?[^~.]$"]; // must not contain . or end in ~
  int64 uid = 3 [(value) = "1000-9223372036854775807"]; // 1000 - 2^63 - 1
  string home_directory = 4 [(length) = "<=255"];
  string shell = 5 [(length)="<=255"];
  google.protobuf.FieldMask update_mask = 6;
}

message DeleteOsLoginProfileRequest {
  string id = 1 [(required) = true, (length) = "<=50"];
}

message CreateOsLoginProfileRequest {
  string organization_id = 1 [(required) = true, (length) = "<=50"];
  string subject_id = 2 [(length) = "<=50"];
  string login = 3 [(required) = true, (length) = "<=32", (pattern)="^[^.]*?[^~.]$"]; // must not contain . or end in ~
  int64 uid = 4 [(value) = "1000-9223372036854775807"]; // 1000 - 2^63 - 1
  string home_directory = 5 [(length) = "<=255"];
  string shell = 6 [(length)="<=255"];
}

message UpdateOsLoginProfileMetadata {
  string os_login_profile_id = 1;
}

message DeleteOsLoginProfileMetadata {
  string os_login_profile_id = 1;
}

message CreateOsLoginProfileMetadata {
  string os_login_profile_id = 1;
  string organization_id = 2;
  string subject_id = 3;
}

message UpdateOsLoginSettingsMetadata{
  string organization_id = 1;
}

message SetDefaultOsLoginProfileMetadata{
  string previous_default_profile_id = 1;
  string current_default_profile_id = 2;
}
