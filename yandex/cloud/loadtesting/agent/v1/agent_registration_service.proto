syntax = "proto3";

package yandex.cloud.loadtesting.agent.v1;

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/loadtesting/agent/v1;agent";
option java_package = "yandex.cloud.api.loadtesting.agent.v1";

import "google/api/annotations.proto";


service AgentRegistrationService {

  // Registers specified agent.
  rpc Register (RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = { post: "/loadtesting/agent/v1/agents/register" body: "*" };
  };

  // Registers external agent.
  rpc ExternalAgentRegister (ExternalAgentRegisterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/loadtesting/agent/v1/agents/externalAgentsRegister" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "ExternalAgentRegisterMetadata"
      response: "AgentInstance"
    };
  };
}

message RegisterRequest {
  string compute_instance_id = 1;
  string agent_version = 2;
}

message RegisterResponse {
  string agent_instance_id = 1;
}

message ExternalAgentRegisterRequest {
  string folder_id = 1;
  string compute_instance_id = 2;
  string name = 3;
  string agent_version = 4;
  map<string, string> labels = 5 [(size) = "<=64", (length) = "<=63",
    (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63",
    (map_key).pattern = "[a-z][-_0-9a-z]*"];
}

message ExternalAgentRegisterMetadata {
  string agent_instance_id = 1;
}
