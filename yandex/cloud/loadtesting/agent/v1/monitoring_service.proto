syntax = "proto3";

package yandex.cloud.loadtesting.agent.v1;

import "google/api/annotations.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/loadtesting/agent/v1;agent";
option java_package = "yandex.cloud.api.loadtesting.agent.v1";


service MonitoringService {
  // Saves monitoring events for specified job
  rpc AddMetric (AddMetricRequest) returns (AddMetricResponse) {
    option (google.api.http) = { post: "/loadtesting/agent/v1/monitorings/reportMetrics" body: "*" };
  }
}

message AddMetricRequest {
  reserved 2;
  string compute_instance_id = 1  [(yandex.cloud.length) = "<=50"];
  string job_id = 3  [(yandex.cloud.required) = true, (yandex.cloud.length) = "<=50"];
  repeated MetricChunk chunks = 4  [(yandex.cloud.size) = ">0"];
  string agent_instance_id = 5  [(yandex.cloud.length) = "<=50"];
}

message MetricChunk {
  repeated Metric data = 1  [(yandex.cloud.size) = ">0"];
  int64 timestamp = 2;
  string comment = 3;
  string instance_host = 4  [(yandex.cloud.required) = true];
}

message Metric {
  string metric_type = 1  [(yandex.cloud.required) = true];
  string metric_name = 2  [(yandex.cloud.required) = true];
  double metric_value = 3;
}

message AddMetricResponse {
  string metric_trail_id = 1;
  int64 code = 2;
}
