syntax = "proto3";

package yandex.cloud.smartwebsecurity.v1.advanced_rate_limiter;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/smartwebsecurity/v1/advanced_rate_limiter/advanced_rate_limiter_profile.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/smartwebsecurity/v1/advanced_rate_limiter;smartwebsecurity";
option java_package = "yandex.cloud.api.smartwebsecurity.v1.advanced_rate_limiter";

// A set of methods for managing AdvancedRateLimiterProfile resources.
service AdvancedRateLimiterProfileService {
  // Returns the specified AdvancedRateLimiterProfile resource.
  rpc Get(GetAdvancedRateLimiterProfileRequest) returns (AdvancedRateLimiterProfile) {
    option (google.api.http) = {get: "/smartwebsecurity/v1/advancedRateLimiterProfiles/{advanced_rate_limiter_profile_id}"};
  }

  // Retrieves the list of AdvancedRateLimiterProfile resources in the specified folder.
  rpc List(ListAdvancedRateLimiterProfilesRequest) returns (ListAdvancedRateLimiterProfilesResponse) {
    option (google.api.http) = {get: "/smartwebsecurity/v1/advancedRateLimiterProfiles"};
  }

  // Creates a ARL profile in the specified folder using the data specified in the request.
  rpc Create(CreateAdvancedRateLimiterProfileRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/smartwebsecurity/v1/advancedRateLimiterProfiles" body: "*"};
    option (yandex.cloud.api.operation) = {
      metadata: "CreateAdvancedRateLimiterProfileMetadata"
      response: "AdvancedRateLimiterProfile"
    };
  }

  // Updates the specified ARL profile.
  rpc Update(UpdateAdvancedRateLimiterProfileRequest) returns (operation.Operation) {
    option (google.api.http) = {patch: "/smartwebsecurity/v1/advancedRateLimiterProfiles/{advanced_rate_limiter_profile_id}" body: "*"};
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateAdvancedRateLimiterProfileMetadata"
      response: "AdvancedRateLimiterProfile"
    };
  }

  // Deletes the specified ARL profile.
  rpc Delete(DeleteAdvancedRateLimiterProfileRequest) returns (operation.Operation) {
    option (google.api.http) = {delete: "/smartwebsecurity/v1/advancedRateLimiterProfiles/{advanced_rate_limiter_profile_id}"};
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteAdvancedRateLimiterProfileMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message GetAdvancedRateLimiterProfileRequest {
  // ID of the AdvancedRateLimiterProfile resource to return.
  string advanced_rate_limiter_profile_id = 1 [(required) = true];
}

message ListAdvancedRateLimiterProfilesRequest {
  // ID of the folder that the ARL profile belongs to.
  // Currently page_size, page_token, filter and order_by are not supported and List method will return all ARL profiles in the folder.
  string folder_id = 1 [(required) = true];
}

message ListAdvancedRateLimiterProfilesResponse {
  // List of AdvancedRateLimiterProfile resources.
  // Currently next_page_token is not supported and List method will return all ARL profiles in the folder.
  repeated AdvancedRateLimiterProfile advanced_rate_limiter_profiles = 1;
}

message CreateAdvancedRateLimiterProfileRequest {
  // ID of the folder to create a ARL profile in.
  string folder_id = 1 [(required) = true];

  // Labels as `` key:value `` pairs. Maximum of 64 per resource.
  map<string, string> labels = 2;

  // Name of the ARL profile. The name is unique within the folder. 1-50 characters long.
  string name = 3;

  // Optional description of the ARL profile.
  string description = 4;

  // List of rules.
  repeated AdvancedRateLimiterRule advanced_rate_limiter_rules = 5;
}

message CreateAdvancedRateLimiterProfileMetadata {
  // ID of the ARL profile that is being created.
  string advanced_rate_limiter_profile_id = 1;
}

message UpdateAdvancedRateLimiterProfileRequest {
  // ID of the ARL profile to update.
  string advanced_rate_limiter_profile_id = 1 [(required) = true];

  // Field mask that specifies which fields of the AdvancedRateLimiterProfile resource are going to be updated.
  google.protobuf.FieldMask update_mask = 2;

  // Labels as `` key:value `` pairs. Maximum of 64 per resource.
  map<string, string> labels = 3;

  // Name of the ARL profile. The name is unique within the folder. 1-50 characters long.
  string name = 4;

  // Optional description of the ARL profile.
  string description = 5;

  // List of rules.
  repeated AdvancedRateLimiterRule advanced_rate_limiter_rules = 6;
}

message UpdateAdvancedRateLimiterProfileMetadata {
  // ID of the AdvancedRateLimiterProfile resource that is being updated.
  string advanced_rate_limiter_profile_id = 1;
}

message DeleteAdvancedRateLimiterProfileRequest {
  // ID of the ARL profile to delete.
  string advanced_rate_limiter_profile_id = 1 [(required) = true];
}

message DeleteAdvancedRateLimiterProfileMetadata {
  // ID of the AdvancedRateLimiterProfile resource that is being deleted.
  string advanced_rate_limiter_profile_id = 1;
}
