syntax = "proto3";

package yandex.cloud.iam.v1;

import "google/api/annotations.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/iam/v1/role.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/iam/v1;iam";
option java_package = "yandex.cloud.api.iam.v1";

// A set of methods for managing Role resources.
service RoleService {
  // Returns the specified Role resource.
  //
  // To get the list of available Role resources, make a [List] request.
  rpc Get (GetRoleRequest) returns (Role) {
    option (google.api.http) = {get: "/iam/v1/roles/{role_id}"};
  }

  // Retrieves the list of Role resources.
  rpc List (ListRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {get: "/iam/v1/roles"};
  }
}

message GetRoleRequest {
  // ID of the Role resource to return.
  // To get the role ID, use a [RoleService.List] request.
  string role_id = 1  [(required) = true, (length) = "<=50"];
}

message ListRolesRequest {
  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size],
  // the service returns a [ListRolesResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  // Default value: 100.
  int64 page_size = 1 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token]
  // to the [ListRolesResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 2 [(length) = "<=2000"];

  // A filter expression that filters resources listed in the response.
  string filter = 3 [(length) = "<=1000"];
}

message ListRolesResponse {
  // List of Role resources.
  repeated Role roles = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListRolesRequest.page_size], use
  // the [next_page_token] as the value
  // for the [ListRolesRequest.page_token] query parameter
  // in the next list request. Each subsequent list request will have its own
  // [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}
