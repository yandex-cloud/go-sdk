syntax = "proto3";

package yandex.cloud.mdb.greenplum.v1;

import "google/api/annotations.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

import "yandex/cloud/mdb/greenplum/v1/hba_rule.proto";


option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/greenplum/v1;greenplum";
option java_package = "yandex.cloud.api.mdb.greenplum.v1";

// A set of methods for managing Greenplum clusters.
service HBARuleService {

  // Retrieves a list of HBA rules for Greenplum clusters.
  rpc List (ListHBARulesRequest) returns (ListHBARulesResponse) {
    option (google.api.http) = { get: "/managed-greenplum/v1/clusters/{cluster_id}/hbaRules" };
  }

  // Retrieves a list of HBA rules for Greenplum clusters for particular revision.
  rpc ListAtRevision (ListHBARulesAtRevisionRequest) returns (ListHBARulesResponse) {
    option (google.api.http) = { get: "/managed-greenplum/v1/clusters/{cluster_id}/hbaRules/atRevision" };
  }

  // Create single HBA rule for the specified Greenplum cluster to the end of HBA rules list.
  rpc Create (CreateHBARuleRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-greenplum/v1/clusters/{cluster_id}/hbaRules" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "HBARulesMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Update specified HBA rule for the specified Greenplum cluster without changind it order.
  rpc Update (UpdateHBARuleRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/managed-greenplum/v1/clusters/{cluster_id}/hbaRules" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "HBARulesMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Delete specified HBA rule for the specified Greenplum cluster.
  rpc Delete (DeleteHBARuleRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/managed-greenplum/v1/clusters/{cluster_id}/hbaRule/{priority}" };
    option (yandex.cloud.api.operation) = {
      metadata: "HBARulesMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Modifies all HBA rules for the specified Greenplum cluster.
  rpc BatchUpdate (BatchUpdateHBARulesRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-greenplum/v1/clusters/{cluster_id}/hbaRules:batchUpdate" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "HBARulesMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message CreateHBARuleRequest {
  // ID of the Greenplum cluster.
  // To get the Greenplum cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // New hba rule for the cluster.
  HBARule hba_rule = 2 [(required) = true];
}

message UpdateHBARuleRequest {
  // ID of the Greenplum cluster.
  // To get the Greenplum cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Updated hba rule for the cluster.
  HBARule hba_rule = 2 [(required) = true];
}

message DeleteHBARuleRequest {
  // ID of the Greenplum cluster.
  // To get the Greenplum cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Priority of the Greenplum cluster rule.
  int64 priority = 2 [(value) = "0-1000"];
}

message ListHBARulesRequest {
  // ID of the Greenplum cluster.
  // To get the Greenplum cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message ListHBARulesAtRevisionRequest {
  // ID of the Greenplum cluster.
  // To get the Greenplum cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Cluster revision
  int64 revision = 2 [(value) = ">0"];
}

message ListHBARulesResponse {
  // Requested list of hba rules for the cluster.
  repeated HBARule hba_rules = 1;
}

message BatchUpdateHBARulesRequest {
  // ID of the Greenplum cluster.
  // To get the Greenplum cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // List of new hba rules for the cluster.
  repeated HBARule hba_rules = 2 [(size) = ">0"];
}

message HBARulesMetadata {
  // ID of the Greenplum cluster which HBA rules was affected.
  string cluster_id = 1;
}
