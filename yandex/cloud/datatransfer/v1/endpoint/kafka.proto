syntax = "proto3";

package yandex.cloud.datatransfer.v1.endpoint;

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/datatransfer/v1/endpoint;endpoint";
option java_package = "yandex.cloud.api.datatransfer.v1.endpoint";
option csharp_namespace = "Yandex.Cloud.Datatransfer.V1.EndPoint"; // there is a clash with class Endpoint in namespace Yandex.Cloud.Datatransfer.V1

import "yandex/cloud/datatransfer/v1/endpoint/common.proto";
import "yandex/cloud/datatransfer/v1/endpoint/parsers.proto";
import "yandex/cloud/datatransfer/v1/endpoint/serializers.proto";

enum KafkaMechanism {
    KAFKA_MECHANISM_UNSPECIFIED = 0;
    KAFKA_MECHANISM_SHA256 = 1;
    KAFKA_MECHANISM_SHA512 = 2;
}
message KafkaConnectionOptions {
    oneof connection {
        // Managed Service for Kafka cluster ID
        string cluster_id = 1;
        // Connection options for on-premise Kafka
        OnPremiseKafka on_premise = 2;
    }
}
message OnPremiseKafka {
    reserved 2 to 3;
    // Kafka broker URLs
    repeated string broker_urls = 1;
    // Network interface for endpoint. If none will assume public ipv4
    string subnet_id = 4;
    // TLS settings for broker connection. Disabled by default.
    TLSMode tls_mode = 5;
}
message KafkaAuth {
    oneof security {
        // Authentication with SASL
        KafkaSaslSecurity sasl = 1;
        // No authentication
        NoAuth no_auth = 2;
    }
}
message KafkaSaslSecurity {
    reserved 2;
    // User name
    string user = 1;
    // SASL mechanism for authentication
    KafkaMechanism mechanism = 3;
    // Password for user
    Secret password = 4;
}
message KafkaSource {
    reserved 6;
    // Connection settings
    KafkaConnectionOptions connection = 1;
    // Authentication settings
    KafkaAuth auth = 2;
    // Security groups
    repeated string security_groups = 3;
    // Full source topic name
    // Deprecated in favor of topic names
    string topic_name = 4 [deprecated = true];
    // Data transformation rules
    DataTransformationOptions transformer = 5;
    // Data parsing rules
    Parser parser = 7;
    // List of topic names to read
    repeated string topic_names = 8;
}
message KafkaTarget {
    reserved 4 to 6;
    // Connection settings
    KafkaConnectionOptions connection = 1;
    // Authentication settings
    KafkaAuth auth = 2;
    // Security groups
    repeated string security_groups = 3;
    // Target topic settings
    KafkaTargetTopicSettings topic_settings = 7;
    // Data serialization format settings
    Serializer serializer = 8;
}
message KafkaTargetTopicSettings {
    oneof topic_settings {
        // Full topic name
        KafkaTargetTopic topic = 1;
        // Topic prefix
        // 
        // Analogue of the Debezium setting database.server.name.
        // Messages will be sent to topic with name <topic_prefix>.<schema>.<table_name>.
        string topic_prefix = 2;
    }
}
message KafkaTargetTopic {
    // Topic name
    string topic_name = 1;
    // Save transactions order
    // Not to split events queue into separate per-table queues.
    bool save_tx_order = 2;
}
