syntax = "proto3";

package yandex.cloud.vpc.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/vpc/v1/route_table.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/vpc/v1;vpc";
option java_package = "yandex.cloud.api.vpc.v1";

// A set of methods for managing RouteTable resources.
service RouteTableService {
  // Returns the specified RouteTable resource.
  //
  // To get the list of available RouteTable resources, make a [List] request.
  rpc Get (GetRouteTableRequest) returns (RouteTable) {
    option (google.api.http) = { get: "/vpc/v1/routeTables/{route_table_id}" };
  }

  // Retrieves the list of RouteTable resources in the specified folder.
  rpc List (ListRouteTablesRequest) returns (ListRouteTablesResponse) {
    option (google.api.http) = { get: "/vpc/v1/routeTables" };
  }

  // Creates a route table in the specified folder and network.
  // Method starts an asynchronous operation that can be cancelled while it is in progress.
  rpc Create (CreateRouteTableRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/vpc/v1/routeTables" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateRouteTableMetadata"
      response: "RouteTable"
    };
  }

  // Updates the specified route table.
  // Method starts an asynchronous operation that can be cancelled while it is in progress.
  rpc Update (UpdateRouteTableRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/vpc/v1/routeTables/{route_table_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateRouteTableMetadata"
      response: "RouteTable"
    };
  }

  // Deletes the specified route table.
  rpc Delete (DeleteRouteTableRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/vpc/v1/routeTables/{route_table_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteRouteTableMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // List operations for the specified route table.
  rpc ListOperations (ListRouteTableOperationsRequest) returns (ListRouteTableOperationsResponse) {
    option (google.api.http) = { get: "/vpc/v1/routeTables/{route_table_id}/operations" };
  }

  // Move route table to another folder.
  rpc Move (MoveRouteTableRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/vpc/v1/routeTables/{route_table_id}:move" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "MoveRouteTableMetadata"
      response: "RouteTable"
    };
  }
}

message GetRouteTableRequest {
  // ID of the RouteTable resource to return.
  // To get the route table ID use a [RouteTableService.List] request.
  string route_table_id = 1 [(required) = true, (length) = "<=50"];
}

message ListRouteTablesRequest {
  // ID of the folder that the route table belongs to.
  // To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size],
  // the service returns a [ListRouteTablesResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests. Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the
  // [ListRouteTablesResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently you can use filtering only on [RouteTable.name] field.
  // 2. An `=` operator.
  // 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
  string filter = 4 [(length) = "<=1000"];
}

message ListRouteTablesResponse {
  // List of RouteTable resources.
  repeated RouteTable route_tables = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListRouteTablesRequest.page_size], use
  // the [next_page_token] as the value
  // for the [ListRouteTablesRequest.page_token] query parameter
  // in the next list request. Subsequent list requests will have their own
  // [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateRouteTableRequest {
  // ID of the folder that the route table belongs to.
  // To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // Name of the route table.
  // The name must be unique within the folder.
  string name = 2 [(pattern) = "|[a-zA-Z]([-_a-zA-Z0-9]{0,61}[a-zA-Z0-9])?"];

  // Description of the route table.
  string description = 3 [(length) = "<=256"];

  // Resource labels, `` key:value `` pairs.
  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  // ID of the network the route table belongs to.
  string network_id = 5 [(required) = true, (length) = "<=50"];

  // List of static routes.
  repeated StaticRoute static_routes = 6;
}

message CreateRouteTableMetadata {
  // ID of the route table that is being created.
  string route_table_id = 1;
}

message UpdateRouteTableRequest {
  // ID of the RouteTable resource to update.
  string route_table_id = 1 [(required) = true, (length) = "<=50"];

  // Field mask that specifies which fields of the RouteTable resource are going to be updated.
  google.protobuf.FieldMask update_mask = 2;

  // Name of the route table.
  // The name must be unique within the folder.
  string name = 3 [(pattern) = "|[a-zA-Z]([-_a-zA-Z0-9]{0,61}[a-zA-Z0-9])?"];

  // Description of the route table.
  string description = 4 [(length) = "<=256"];

  // Resource labels as `` key:value `` pairs.
  map<string, string> labels = 5 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  // List of static routes.
  repeated StaticRoute static_routes = 6;
}

message UpdateRouteTableMetadata {
  // ID of the RouteTable resource that is being updated.
 string route_table_id = 1;
}

message DeleteRouteTableRequest {
  // ID of the route table to delete.
  // To get the route table ID use a [RouteTableService.List] request.
  string route_table_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteRouteTableMetadata {
  // ID of the RouteTable resource that is being deleted.
  string route_table_id = 1;
}

message ListRouteTableOperationsRequest {
  // ID of the RouteTable resource to list operations for.
  string route_table_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than [page_size], the service returns a [ListRouteTableOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests. Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the
  // [ListRouteTableOperationsResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListRouteTableOperationsResponse {
  // List of operations for the specified RouteTable resource.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListRouteTableOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListRouteTableOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message MoveRouteTableRequest {
  // ID of the RouteTable resource to move.
  string route_table_id = 1 [(required) = true, (length) = "<=50"];

  // ID of the destination folder.
  string destination_folder_id = 2 [(required) = true, (length) = "<=50"];
}

message MoveRouteTableMetadata {
  // ID of the RouteTable resource that is being moved.
  string route_table_id = 1;
}
