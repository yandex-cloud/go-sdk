syntax = "proto3";

package yandex.cloud.vpc.v1.privatelink;

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/vpc/v1/privatelink;privatelink";
option java_package = "yandex.cloud.api.vpc.v1.privatelink";

import "google/protobuf/timestamp.proto";

message PrivateEndpoint {
  // ID of the private endpoint. Generated at creation time.
  string id = 1;

  // ID of the folder that the private endpoint belongs to.
  string folder_id = 2;

  // Creation timestamp.
  google.protobuf.Timestamp created_at = 3;

  // Name of the private endpoint.
  // The name is unique within the folder.
  // Value must match the regular expression
  // ``\|[a-zA-Z]([-_a-zA-Z0-9]{0,61}[a-zA-Z0-9])?``.
  string name = 4;

  // Description of the private endpoint. 0-256 characters long.
  string description = 5;

  // Private endpoint labels as `key:value` pairs.
  // No more than 64 per resource.
  // The maximum string length in characters for each value is 63.
  // Each value must match the regular expression `[-_0-9a-z]*`.
  // The string length in characters for each key must be 1-63.
  // Each key must match the regular expression `[a-z][-_0-9a-z]*`.
  map<string, string> labels = 6;

  // ID of the network that the private endpoint belongs to.
  string network_id = 7;

  // Status of the private endpoint.
  Status status = 8;

  // Private endpoint ip address details.
  EndpointAddress address = 9;

  // Private endpoint dns options.
  DnsOptions dns_options = 10;

  // Service to connect with via private endpoint.
  oneof service {
    // Yandex Cloud Object Storage.
    ObjectStorage object_storage = 11;
  }

  // Status of the private endpoint.
  enum Status {
    STATUS_UNSPECIFIED = 0;
    // Private endpoint is still creating / updating.
    PENDING = 1;
    // Private endpoint is available.
    AVAILABLE = 2;
    // Private endpoint is deleting.
    DELETING = 3;
  }

  // Yandex Cloud Object Storage.
  message ObjectStorage {}

  message DnsOptions {
    // If enabled - vpc will create private dns records for specified service.
    bool private_dns_records_enabled = 1;
  }

  // Private endpoint ip address details.
  message EndpointAddress {
    // ID of the subnet that the private endpoint address belongs to.
    string subnet_id = 1;
    // IP address of the private endpoint.
    string address = 2;
    // ID of the private endpoint address.
    string address_id = 3;
  }
}
