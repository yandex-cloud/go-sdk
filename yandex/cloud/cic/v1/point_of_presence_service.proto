syntax = "proto3";

package yandex.cloud.cic.v1;

import "google/api/annotations.proto";

import "yandex/cloud/validation.proto";

import "yandex/cloud/cic/v1/point_of_presence.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/cic/v1;cic";
option java_package = "yandex.cloud.api.cic.v1";

// A set of methods for managing PointOfPresence resources.
service PointOfPresenceService {

  // Returns the specified PointOfPresence resource.
  //
  // To get the list of available PointOfPresence resources, make a [List] request.
  rpc Get (GetPointOfPresenceRequest) returns (PointOfPresence) {
    option (google.api.http) = {get: "/cic/v1/pointOfPresences/{point_of_presence_id}"};
  }

  // Retrieves the list of PointOfPresence resources in the specified folder.
  rpc List (ListPointOfPresencesRequest) returns (ListPointOfPresencesResponse) {
    option (google.api.http) = {get: "/cic/v1/pointOfPresences"};
  }
}

message GetPointOfPresenceRequest {
  // ID of the PointOfPresence resource to return.
  // To get the pointOfPresence ID use a [PointOfPresenceService.List] request.
  string point_of_presence_id = 1 [(required) = true, (length) = "<=50"];
}

message ListPointOfPresencesRequest {
  reserved 1;

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size],
  // the service returns a [ListPointOfPresencesResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests. Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the
  // [ListPointOfPresencesResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently you can use filtering only on [Subnet.name] field.
  // 2. An `=` operator.
  // 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
  string filter = 4 [(length) = "<=1000"];
}

message ListPointOfPresencesResponse {
  // List of PointOfPresence resources.
  repeated PointOfPresence point_of_presences = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListPointOfPresencesRequest.page_size], use
  // the [next_page_token] as the value
  // for the [ListPointOfPresencesRequest.page_token] query parameter
  // in the next list request. Subsequent list requests will have their own
  // [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}
