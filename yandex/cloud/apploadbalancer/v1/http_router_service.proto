syntax = "proto3";

package yandex.cloud.apploadbalancer.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/apploadbalancer/v1/http_router.proto";
import "yandex/cloud/apploadbalancer/v1/virtual_host.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/apploadbalancer/v1;apploadbalancer";
option java_package = "yandex.cloud.api.apploadbalancer.v1";

// A set of methods for managing HTTP routers.
service HttpRouterService {
  // Returns the specified HTTP router.
  //
  // To get the list of all available HTTP routers, make a [List] request.
  rpc Get(GetHttpRouterRequest) returns (HttpRouter) {
    option (google.api.http) = {get: "/apploadbalancer/v1/httpRouters/{http_router_id}"};
  }

  // Lists HTTP routers in the specified folder.
  rpc List(ListHttpRoutersRequest) returns (ListHttpRoutersResponse) {
    option (google.api.http) = {get: "/apploadbalancer/v1/httpRouters"};
  }

  // Creates an HTTP router in the specified folder.
  rpc Create(CreateHttpRouterRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/apploadbalancer/v1/httpRouters" body: "*"};
    option (yandex.cloud.api.operation) = {
      metadata: "CreateHttpRouterMetadata"
      response: "HttpRouter"
    };
  }

  // Updates the specified HTTP router.
  rpc Update(UpdateHttpRouterRequest) returns (operation.Operation) {
    option (google.api.http) = {patch: "/apploadbalancer/v1/httpRouters/{http_router_id}" body: "*"};
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateHttpRouterMetadata"
      response: "HttpRouter"
    };
  }

  // Deletes the specified HTTP router.
  rpc Delete(DeleteHttpRouterRequest) returns (operation.Operation) {
    option (google.api.http) = {delete: "/apploadbalancer/v1/httpRouters/{http_router_id}"};
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteHttpRouterMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Lists operations for the specified HTTP router.
  rpc ListOperations (ListHttpRouterOperationsRequest) returns (ListHttpRouterOperationsResponse) {
    option (google.api.http) = {get: "/apploadbalancer/v1/httpRouters/{http_router_id}/operations"};
  }
}

message GetHttpRouterRequest {
  // ID of the HTTP router to return.
  //
  // To get the HTTP router ID, make a [HttpRouterService.List] request.
  string http_router_id = 1 [(required) = true];
}

message ListHttpRoutersRequest {
  // ID of the folder to list HTTP routers in.
  //
  // To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true];

  // The maximum number of results per page to return. If the number of available
  // results is larger than `page_size`, the service returns a [ListHttpRoutersResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  // Default value: 100.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. To get the next page of results, set `page_token` to the
  // [ListHttpRoutersResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that filters HTTP routers listed in the response.
  //
  // The expression must specify:
  // 1. The field name. Currently you can use filtering only on [HttpRouter.name] field.
  // 2. An `=` operator.
  // 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
  // Example of a filter: `name=my-http-router`.
  string filter = 4 [(length) = "<=1000"];
}

message ListHttpRoutersResponse {
  // List of HTTP routers in the specified folder.
  repeated HttpRouter http_routers = 1;

  // Token for getting the next page of the list. If the number of results is greater than
  // the specified [ListHttpRoutersRequest.page_size], use `next_page_token` as the value
  // for the [ListHttpRoutersRequest.page_token] parameter in the next list request.
  //
  // Each subsequent page will have its own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message DeleteHttpRouterRequest {
  // ID of the HTTP router to delete.
  //
  // To get the HTTP router ID, make a [HttpRouterService.List] request.
  string http_router_id = 1 [(required) = true];
}

message DeleteHttpRouterMetadata {
  // ID of the HTTP router that is being deleted.
  string http_router_id = 1;
}

message UpdateHttpRouterRequest {
  // ID of the HTTP router to update.
  //
  // To get the HTTP router ID, make a [HttpRouterService.List] request.
  string http_router_id = 1 [(required) = true];

  // Field mask that specifies which attributes of the HTTP router should be updated.
  google.protobuf.FieldMask update_mask = 2;

  // New name for the HTTP router.
  // The name must be unique within the folder.
  string name = 3 [(pattern) = "([a-z]([-a-z0-9]{0,61}[a-z0-9])?)?"];

  // New description of the HTTP router.
  string description = 4 [(length) = "<=256"];

  // HTTP router labels as `key:value` pairs.
  // For details about the concept, see [documentation](/docs/overview/concepts/services#labels).
  //
  // Existing set of labels is completely replaced by the provided set, so if you just want
  // to add or remove a label:
  // 1. Get the current set of labels with a [HttpRouterService.Get] request.
  // 2. Add or remove a label in this set.
  // 3. Send the new set in this field.
  map<string, string> labels = 5 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

  // New virtual hosts that combine routes inside the router.
  // For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#virtual-host).
  //
  // Only one virtual host with no authority (default match) can be specified.
  //
  // Existing list of virtual hosts is completely replaced by the specified list, so if you just want to add or remove
  // a virtual host, make a [VirtualHostService.Create] request or a [VirtualHostService.Delete] request.
  repeated VirtualHost virtual_hosts = 6;

  reserved 7;

  // New route options for the HTTP router.
  RouteOptions route_options = 8;
}

message UpdateHttpRouterMetadata {
  // ID of the HTTP router that is being updated.
  string http_router_id = 1;
}

message CreateHttpRouterRequest {
  // ID of the folder to create an HTTP router in.
  //
  // To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true];

  // Name of the HTTP router.
  // The name must be unique within the folder.
  string name = 2 [(pattern) = "([a-z]([-a-z0-9]{0,61}[a-z0-9])?)?"];

  // Description of the HTTP router.
  string description = 3 [(length) = "<=256"];

  // HTTP router labels as `key:value` pairs.
  // For details about the concept, see [documentation](/docs/overview/concepts/services#labels).
  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

  // Virtual hosts that combine routes inside the router.
  // For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#virtual-host).
  //
  // Only one virtual host with no authority (default match) can be specified.
  repeated VirtualHost virtual_hosts = 5;

  reserved 6;

  // Route options for the HTTP router.
  RouteOptions route_options = 7;
}

message CreateHttpRouterMetadata {
  // ID of the HTTP router that is being created.
  string http_router_id = 1;
}

message ListHttpRouterOperationsRequest {
  // ID of the HTTP router to get operations for.
  //
  // To get the HTTP router ID, use a [HttpRouterService.List] request.
  string http_router_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than [page_size], the service returns a [ListHttpRouterOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  // Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the
  // [ListHttpRouterOperationsResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListHttpRouterOperationsResponse {
  // List of operations for the specified HTTP router.
  repeated operation.Operation operations = 1;

  // Token for getting the next page of the list. If the number of results is greater than
  // the specified [ListHttpRouterOperationsRequest.page_size], use `next_page_token` as the value
  // for the [ListHttpRouterOperationsRequest.page_token] parameter in the next list request.
  //
  // Each subsequent page will have its own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}
